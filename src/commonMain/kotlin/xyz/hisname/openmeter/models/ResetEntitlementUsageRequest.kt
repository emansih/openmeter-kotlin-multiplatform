/**
 *
 * Please note:
 * This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * Do not edit this file manually.
 *
 */

@file:Suppress(
    "ArrayInDataClass",
    "EnumEntryName",
    "RemoveRedundantQualifierName",
    "UnusedImport"
)

package xyz.hisname.openmeter.models


import kotlinx.serialization.*
import kotlinx.serialization.descriptors.*
import kotlinx.serialization.encoding.*

/**
 * 
 *
 * @param effectiveAt The time at which the reset takes effect, defaults to now. The reset cannot be in the future. The provided value is truncated to the minute due to how historical meter data is stored. 
 * @param retainAnchor Determines whether the usage period anchor is retained or reset to the effectiveAt time. - If true, the usage period anchor is retained. - If false, the usage period anchor is reset to the effectiveAt time. 
 * @param preserveOverage Determines whether the overage is preserved or forgiven, overriding the entitlement's default behavior. - If true, the overage is preserved. - If false, the overage is forgiven. 
 */
@Serializable

data class ResetEntitlementUsageRequest (

    /* The time at which the reset takes effect, defaults to now. The reset cannot be in the future. The provided value is truncated to the minute due to how historical meter data is stored.  */
    @SerialName(value = "effectiveAt") val effectiveAt: kotlinx.datetime.Instant? = null,

    /* Determines whether the usage period anchor is retained or reset to the effectiveAt time. - If true, the usage period anchor is retained. - If false, the usage period anchor is reset to the effectiveAt time.  */
    @SerialName(value = "retainAnchor") val retainAnchor: kotlin.Boolean? = null,

    /* Determines whether the overage is preserved or forgiven, overriding the entitlement's default behavior. - If true, the overage is preserved. - If false, the overage is forgiven.  */
    @SerialName(value = "preserveOverage") val preserveOverage: kotlin.Boolean? = null

) {


}

