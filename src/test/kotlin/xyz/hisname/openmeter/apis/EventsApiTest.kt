/**
 *
 * Please note:
 * This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * Do not edit this file manually.
 *
 */

@file:Suppress(
    "ArrayInDataClass",
    "EnumEntryName",
    "RemoveRedundantQualifierName",
    "UnusedImport"
)

package xyz.hisname.openmeter.apis

import io.kotlintest.shouldBe
import io.kotlintest.specs.ShouldSpec

import xyz.hisname.openmeter.apis.EventsApi
import xyz.hisname.openmeter.models.Event
import xyz.hisname.openmeter.models.IngestedEvent
import xyz.hisname.openmeter.models.Problem

class EventsApiTest : ShouldSpec() {
    init {
        // uncomment below to create an instance of EventsApi
        //val apiInstance = EventsApi()

        // to test ingestEvents
        should("test ingestEvents") {
            // uncomment below to test ingestEvents
            //val event : Event =  // Event | The event or batch of events to ingest. The request body must be a CloudEvents JSON object or an array of CloudEvents JSON objects. The CloudEvents JSON object must adhere to the CloudEvents Specification JSON Schema. 
            //apiInstance.ingestEvents(event)
        }

        // to test listEvents
        should("test listEvents") {
            // uncomment below to test listEvents
            //val from : kotlinx.datetime.Instant = 2023-01-01T00:00Z // kotlinx.datetime.Instant | Start date-time in RFC 3339 format. Inclusive. 
            //val to : kotlinx.datetime.Instant = 2023-01-02T00:00Z // kotlinx.datetime.Instant | End date-time in RFC 3339 format. Inclusive. 
            //val limit : kotlin.Int = 100 // kotlin.Int | Number of events to return
            //val result : kotlin.collections.List<IngestedEvent> = apiInstance.listEvents(from, to, limit)
            //result shouldBe ("TODO")
        }

    }
}
