/**
 *
 * Please note:
 * This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * Do not edit this file manually.
 *
 */

@file:Suppress(
    "ArrayInDataClass",
    "EnumEntryName",
    "RemoveRedundantQualifierName",
    "UnusedImport"
)

package xyz.hisname.openmeter.models

import io.kotlintest.shouldBe
import io.kotlintest.specs.ShouldSpec

import xyz.hisname.openmeter.models.ResetEntitlementUsageRequest

class ResetEntitlementUsageRequestTest : ShouldSpec() {
    init {
        // uncomment below to create an instance of ResetEntitlementUsageRequest
        //val modelInstance = ResetEntitlementUsageRequest()

        // to test the property `effectiveAt` - The time at which the reset takes effect, defaults to now. The reset cannot be in the future. The provided value is truncated to the minute due to how historical meter data is stored. 
        should("test effectiveAt") {
            // uncomment below to test the property
            //modelInstance.effectiveAt shouldBe ("TODO")
        }

        // to test the property `retainAnchor` - Determines whether the usage period anchor is retained or reset to the effectiveAt time. - If true, the usage period anchor is retained. - If false, the usage period anchor is reset to the effectiveAt time. 
        should("test retainAnchor") {
            // uncomment below to test the property
            //modelInstance.retainAnchor shouldBe ("TODO")
        }

        // to test the property `preserveOverage` - Determines whether the overage is preserved or forgiven, overriding the entitlement's default behavior. - If true, the overage is preserved. - If false, the overage is forgiven. 
        should("test preserveOverage") {
            // uncomment below to test the property
            //modelInstance.preserveOverage shouldBe ("TODO")
        }

    }
}
